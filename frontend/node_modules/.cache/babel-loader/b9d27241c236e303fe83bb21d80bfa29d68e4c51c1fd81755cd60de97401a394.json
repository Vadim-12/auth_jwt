{"ast":null,"code":"import axios from 'axios';\nexport const API_URL = 'http://localhost:5000/api';\nconst $api = axios.create({\n  withCredentials: true,\n  baseURL: API_URL\n});\n$api.interceptors.request.use(config => {\n  config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`;\n  return config;\n});\n$api.interceptors.response.use(config => config, async error => {\n  const originalRequest = error.config;\n  if (error.response.status === 401 && error.config && !error.config._isRetry) {\n    originalRequest._isRetry = true;\n    try {\n      const response = await axios.get(`${API_URL}/refresh`, {\n        withCredentials: true\n      });\n      localStorage.setItem('token', response.data.accessToken);\n      return $api.request(originalRequest);\n    } catch (e) {\n      console.log('НЕ АВТОРИЗОВАН');\n    }\n  }\n});\nexport default $api;","map":{"version":3,"names":["axios","API_URL","$api","create","withCredentials","baseURL","interceptors","request","use","config","headers","Authorization","localStorage","getItem","response","error","originalRequest","status","_isRetry","get","setItem","data","accessToken","e","console","log"],"sources":["/Users/vadimagarkov/Desktop/sites/jwt_auth2/frontend/src/http/index.ts"],"sourcesContent":["import axios from 'axios'\nimport { AuthResponse } from '../models/response/AuthResponse'\n\nexport const API_URL = 'http://localhost:5000/api'\n\nconst $api = axios.create({\n\twithCredentials: true,\n\tbaseURL: API_URL,\n})\n\n$api.interceptors.request.use((config) => {\n\tconfig.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n\treturn config\n})\n\n$api.interceptors.response.use(config => config, async error => {\n\tconst originalRequest = error.config\n\tif (error.response.status === 401 && error.config && !error.config._isRetry) {\n\t\toriginalRequest._isRetry = true\n\t\ttry {\n\t\t\tconst response = await axios.get<AuthResponse>(`${API_URL}/refresh`, {withCredentials: true})\n\t\t\tlocalStorage.setItem('token', response.data.accessToken)\n\t\t\treturn $api.request(originalRequest)\n\t\t} catch (e) {\n\t\t\tconsole.log('НЕ АВТОРИЗОВАН')\n\t\t}\n\t}\n})\n\nexport default  $api"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAO,MAAMC,OAAO,GAAG,2BAA2B;AAElD,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAAC;EACzBC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAEJ;AACV,CAAC,CAAC;AAEFC,IAAI,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACzCA,MAAM,CAACC,OAAO,CAACC,aAAa,GAAI,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE,EAAC;EACxE,OAAOJ,MAAM;AACd,CAAC,CAAC;AAEFP,IAAI,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAACC,MAAM,IAAIA,MAAM,EAAE,MAAMM,KAAK,IAAI;EAC/D,MAAMC,eAAe,GAAGD,KAAK,CAACN,MAAM;EACpC,IAAIM,KAAK,CAACD,QAAQ,CAACG,MAAM,KAAK,GAAG,IAAIF,KAAK,CAACN,MAAM,IAAI,CAACM,KAAK,CAACN,MAAM,CAACS,QAAQ,EAAE;IAC5EF,eAAe,CAACE,QAAQ,GAAG,IAAI;IAC/B,IAAI;MACH,MAAMJ,QAAQ,GAAG,MAAMd,KAAK,CAACmB,GAAG,CAAgB,GAAElB,OAAQ,UAAS,EAAE;QAACG,eAAe,EAAE;MAAI,CAAC,CAAC;MAC7FQ,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAEN,QAAQ,CAACO,IAAI,CAACC,WAAW,CAAC;MACxD,OAAOpB,IAAI,CAACK,OAAO,CAACS,eAAe,CAAC;IACrC,CAAC,CAAC,OAAOO,CAAC,EAAE;MACXC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC9B;EACD;AACD,CAAC,CAAC;AAEF,eAAgBvB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}