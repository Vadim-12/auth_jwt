{"ast":null,"code":"var _jsxFileName = \"/Users/vadimagarkov/Documents/GitHub/auth_jwt/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport LoginForm from './components/LoginForm';\nimport { Context } from '.';\nimport { observer } from 'mobx-react-lite';\nimport PostService from \"./services/PostService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    store\n  } = useContext(Context);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      store.checkAuth();\n    }\n  }, []);\n  async function getPosts() {\n    try {\n      const response = await PostService.fetchPosts();\n      setPosts(response.data);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  if (store.isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  if (!store.isAuth) {\n    return /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: `Пользователь авторизован ${store.user.email}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: store.user.isActivated ? 'Аккаунт подтвержден по почте' : 'ПОДТВЕРДИТЕ АККАУНТ!!!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => store.logout(),\n      children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getPosts,\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: `${post.date} - ${post.authorId} - ${post.text}`\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JXqnMV08ja5FFv7H6Dq8agexQek=\");\n_c = App;\nexport default _c2 = observer(App);\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useContext","useEffect","useState","LoginForm","Context","observer","PostService","jsxDEV","_jsxDEV","App","_s","store","posts","setPosts","localStorage","getItem","checkAuth","getPosts","response","fetchPosts","data","e","console","log","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","isAuth","user","email","isActivated","onClick","logout","map","post","date","authorId","text","id","_c","_c2","$RefreshReg$"],"sources":["/Users/vadimagarkov/Documents/GitHub/auth_jwt/frontend/src/App.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport LoginForm from './components/LoginForm'\nimport { Context } from '.'\nimport { observer } from 'mobx-react-lite'\nimport { IUser } from './models/IUser'\nimport UserService from './services/UserService'\nimport PostService from \"./services/PostService\";\nimport {IPost} from \"./models/IPost\";\n\nfunction App() {\n  const {store} = useContext(Context)\n  const [posts, setPosts] = useState<IPost[]>([])\n\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      store.checkAuth()\n    }\n  }, [])\n\n  async function getPosts() {\n    try {\n      const response = await PostService.fetchPosts()\n      setPosts(response.data)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  if (store.isLoading) {\n    return <div>Загрузка...</div>\n  }\n\n  if (!store.isAuth) {\n    return <LoginForm/>\n  }\n\n  return (\n    <div>\n      <h1>{`Пользователь авторизован ${store.user.email}`}</h1>\n      <h1>{store.user.isActivated ? 'Аккаунт подтвержден по почте' : 'ПОДТВЕРДИТЕ АККАУНТ!!!'}</h1>\n      <button onClick={() => store.logout()}>Выйти</button>\n      <div>\n        <button onClick={getPosts}>Загрузить посты</button>\n        <ul>\n          {\n            posts.map(post => (\n              <li key={post.id}>{`${post.date} - ${post.authorId} - ${post.text}`}</li>\n            ))\n          }\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default observer(App)"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,OAAO,QAAQ,GAAG;AAC3B,SAASC,QAAQ,QAAQ,iBAAiB;AAG1C,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAACC;EAAK,CAAC,GAAGX,UAAU,CAACI,OAAO,CAAC;EACnC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAU,EAAE,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd,IAAIa,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MACjCJ,KAAK,CAACK,SAAS,CAAC,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeC,QAAQA,CAAA,EAAG;IACxB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,WAAW,CAACa,UAAU,CAAC,CAAC;MAC/CN,QAAQ,CAACK,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAChB;EACF;EAEA,IAAIV,KAAK,CAACa,SAAS,EAAE;IACnB,oBAAOhB,OAAA;MAAAiB,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/B;EAEA,IAAI,CAAClB,KAAK,CAACmB,MAAM,EAAE;IACjB,oBAAOtB,OAAA,CAACL,SAAS;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EACrB;EAEA,oBACErB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAM,4BAA2Bd,KAAK,CAACoB,IAAI,CAACC,KAAM;IAAC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzDrB,OAAA;MAAAiB,QAAA,EAAKd,KAAK,CAACoB,IAAI,CAACE,WAAW,GAAG,8BAA8B,GAAG;IAAwB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7FrB,OAAA;MAAQ0B,OAAO,EAAEA,CAAA,KAAMvB,KAAK,CAACwB,MAAM,CAAC,CAAE;MAAAV,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDrB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAQ0B,OAAO,EAAEjB,QAAS;QAAAQ,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnDrB,OAAA;QAAAiB,QAAA,EAEIb,KAAK,CAACwB,GAAG,CAACC,IAAI,iBACZ7B,OAAA;UAAAiB,QAAA,EAAoB,GAAEY,IAAI,CAACC,IAAK,MAAKD,IAAI,CAACE,QAAS,MAAKF,IAAI,CAACG,IAAK;QAAC,GAA1DH,IAAI,CAACI,EAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwD,CACzE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CA5CQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA8CZ,eAAAkC,GAAA,GAAetC,QAAQ,CAACI,GAAG,CAAC;AAAA,IAAAiC,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}