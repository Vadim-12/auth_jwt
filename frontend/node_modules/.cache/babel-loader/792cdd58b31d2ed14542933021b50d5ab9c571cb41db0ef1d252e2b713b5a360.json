{"ast":null,"code":"import $api from \"../http\";\nexport default class PostService {\n  static fetchPosts() {\n    return $api.get('/posts');\n  }\n  static createPost(authorId, text) {\n    return $api.post('/posts', {\n      authorId,\n      text\n    });\n  }\n  static updatePost(postId, text) {\n    return $api.put(`/posts/${postId}`, {\n      text\n    });\n  }\n  static deletePost(postId) {\n    return $api.delete(`/posts/${postId}`);\n  }\n}","map":{"version":3,"names":["$api","PostService","fetchPosts","get","createPost","authorId","text","post","updatePost","postId","put","deletePost","delete"],"sources":["/Users/vadimagarkov/Documents/GitHub/auth_jwt/frontend/src/services/PostService.ts"],"sourcesContent":["import { AxiosResponse } from \"axios\";\nimport $api from \"../http\";\nimport { IPost } from \"../models/IPost\";\n\nexport default class PostService {\n  static fetchPosts(): Promise<AxiosResponse<IPost[]>> {\n    return $api.get<IPost[]>('/posts')\n  }\n\n  static createPost(authorId: string, text: string): Promise<AxiosResponse<IPost>> {\n    return $api.post<IPost>('/posts', {\n      authorId,\n      text\n    })\n  }\n\n  static updatePost(postId: string, text: string): Promise<AxiosResponse<IPost>> {\n    return $api.put<IPost>(`/posts/${postId}`, {\n      text\n    })\n  }\n\n  static deletePost(postId: string): Promise<AxiosResponse<IPost>> {\n    return $api.delete(`/posts/${postId}`)\n  }\n}"],"mappings":"AACA,OAAOA,IAAI,MAAM,SAAS;AAG1B,eAAe,MAAMC,WAAW,CAAC;EAC/B,OAAOC,UAAUA,CAAA,EAAoC;IACnD,OAAOF,IAAI,CAACG,GAAG,CAAU,QAAQ,CAAC;EACpC;EAEA,OAAOC,UAAUA,CAACC,QAAgB,EAAEC,IAAY,EAAiC;IAC/E,OAAON,IAAI,CAACO,IAAI,CAAQ,QAAQ,EAAE;MAChCF,QAAQ;MACRC;IACF,CAAC,CAAC;EACJ;EAEA,OAAOE,UAAUA,CAACC,MAAc,EAAEH,IAAY,EAAiC;IAC7E,OAAON,IAAI,CAACU,GAAG,CAAS,UAASD,MAAO,EAAC,EAAE;MACzCH;IACF,CAAC,CAAC;EACJ;EAEA,OAAOK,UAAUA,CAACF,MAAc,EAAiC;IAC/D,OAAOT,IAAI,CAACY,MAAM,CAAE,UAASH,MAAO,EAAC,CAAC;EACxC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}